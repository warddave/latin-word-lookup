# cargo-deny configuration
# https://embarkstudios.github.io/cargo-deny/

[licenses]
# List of explicitly allowed licenses
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
    "CC0-1.0",
]

# Confidence threshold for detecting a license from a license text.
confidence-threshold = 0.8

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "warn"
# Lint level for when a crate version requirement is `*`
wildcards = "allow"
# The graph highlighting used when creating dotgraphs for crates
highlight = "all"

# List of crates that are allowed. Use with care!
allow = []

# List of crates to deny
deny = [
    # Crates that are known to be problematic
    { name = "openssl", use-instead = "rustls" },
    { name = "git2", use-instead = "gix" },
]

# Certain crates/versions that will be skipped when doing duplicate detection.
skip = []

# Similarly to `skip` allows you to skip certain crates from being checked. Unlike `skip`,
# `skip-tree` skips the crate and all of its dependencies entirely.
skip-tree = []

[advisories]
# The path where the advisory database is cloned/fetched into
db-path = "~/.cargo/advisory-db"
# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]
# The lint level for security vulnerabilities
vulnerability = "deny"
# The lint level for unmaintained crates
unmaintained = "warn"
# The lint level for crates that have been yanked from their source registry
yanked = "warn"
# The lint level for crates with security notices. Note that as of
# 2019-12-17 there are no security notice advisories in
# https://github.com/rustsec/advisory-db
notice = "warn"
# A list of advisory IDs to ignore. Note that ignored advisories will still
# output a note when they are encountered.
ignore = [
    # GTK3 bindings are unmaintained but required for Tauri on Linux
    "RUSTSEC-2024-0411", # gdkwayland-sys
    "RUSTSEC-2024-0412", # gdk
    "RUSTSEC-2024-0413", # atk
    "RUSTSEC-2024-0414", # gdkx11-sys
    "RUSTSEC-2024-0415", # gtk
    "RUSTSEC-2024-0416", # atk-sys
    "RUSTSEC-2024-0417", # gdkx11
    "RUSTSEC-2024-0418", # gdk-sys
    "RUSTSEC-2024-0419", # gtk3-macros
    "RUSTSEC-2024-0420", # gtk-sys
    "RUSTSEC-2024-0370", # proc-macro-error (unmaintained)
    "RUSTSEC-2024-0429", # glib unsoundness (not exploitable in our usage)
]

[sources]
# Lint level for what to happen when a crate from a crate registry that is
# not in the allow list is encountered
unknown-registry = "warn"
# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "warn"

# List of allowed crate registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]

# List of allowed Git repositories
allow-git = []