name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: true
          prerelease: false

  build-tauri:
    name: Build Tauri App
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            rust_target: 'x86_64-apple-darwin'
          - platform: 'macos-latest' 
            rust_target: 'aarch64-apple-darwin'
          - platform: 'ubuntu-20.04'
            rust_target: 'x86_64-unknown-linux-gnu'
          - platform: 'windows-latest'
            rust_target: 'x86_64-pc-windows-msvc'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.rust_target }}

      - name: Install dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Install Tauri CLI
        run: cargo install tauri-cli

      - name: Build Tauri App
        working-directory: src-tauri
        run: |
          cargo tauri build --target ${{ matrix.rust_target }}

      - name: Upload Release Assets (macOS)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./src-tauri/target/${{ matrix.rust_target }}/release/bundle/dmg/Latin Word Lookup_*.dmg
          asset_name: Latin-Word-Lookup_${{ github.ref_name }}_${{ matrix.rust_target }}.dmg
          asset_content_type: application/x-apple-diskimage

      - name: Upload Release Assets (Linux)
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./src-tauri/target/${{ matrix.rust_target }}/release/bundle/appimage/latin-word-lookup_*.AppImage
          asset_name: Latin-Word-Lookup_${{ github.ref_name }}_${{ matrix.rust_target }}.AppImage
          asset_content_type: application/x-executable

      - name: Upload Release Assets (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./src-tauri/target/${{ matrix.rust_target }}/release/bundle/msi/Latin Word Lookup_*.msi
          asset_name: Latin-Word-Lookup_${{ github.ref_name }}_${{ matrix.rust_target }}.msi
          asset_content_type: application/x-msi

  publish-release:
    name: Publish Release
    needs: [create-release, build-tauri]
    runs-on: ubuntu-latest
    steps:
      - name: Publish Release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ needs.create-release.outputs.release_id }},
              draft: false
            })